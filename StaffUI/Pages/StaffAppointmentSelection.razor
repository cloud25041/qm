
@page "/staffappointmentselection"
@inject NavigationManager NavManager
@inject NavigationManager UriHelper
@inject IModalService modal
@using Microsoft.AspNetCore.Components.Routing
@using StaffUI.Models;
@inject HttpClient HttpClient
@inject LocalStorage.ILocalStorageService localStorage;
@using Newtonsoft.Json;



<h3>List of Unassigned Appointments</h3>


@if (_loading)
{
    <h3>Registering...</h3>
}
else
{
    if (ViewAppointmentDetailsList != null)
    {
        <thead class="table-primary">
            <tr>
                <th class="col-xs-1 col-sm-1 col-md-1 col-lg-1">User AccountId</th>
                <th class="col-xs-1 col-sm-1 col-md-1 col-lg-1">Name</th>
                <th class="col-xs-1 col-sm-1 col-md-1 col-lg-1 ">Date</th>
                <th class="col-xs-1 col-sm-1 col-md-1 col-lg-1 ">Time</th>
                <th class="col-xs-1 col-sm-1 col-md-1 col-lg-1">Action</th>
            </tr>
        </thead>
        
        foreach (var appointment in ViewAppointmentDetailsList)
        {
            <div class="table-responsive">
                <table class="table table-sm table-hover">

                    <tbody>
                        <tr>
                            
                            <td class="col-xs-2 col-sm-2 col-md-2 col-lg-2" style="text-align:center">@appointment.UserAccountId</td>
                            <td class="col-xs-2 col-sm-2 col-md-2 col-lg-2" style="text-align:center">@appointment.CustomerName</td>
                            <td class="col-xs-3 col-sm-3 col-md-3 col-lg-3" style="text-align:center">@appointment.AppointmentDate.ToLongDateString() </td>
                            <td class="col-xs-2 col-sm-2 col-md-2 col-lg-2" style="text-align:left"> 10.30am</td>
                            <td class="col-xs-2 col-sm-2 col-md-2 col-lg-2" style="text-align:left">
                                <button class="btn btn-primary" @onclick=@((SelectButton))>Select</button>
                            </td>
                        </tr>

                    </tbody>
                </table>
            </div>
        }

    }
    else
    {

        <tr>
            <td colspan="5">No Record Found.</td>
        </tr>

    }


}













@code
{
    #region Field


    #endregion
    //private bool _loading;

    private bool _loading;
    private bool _noAppointmentflag;

    private List<ViewAppointmentDetails> ViewAppointmentDetailsList { get; set; }



    protected override async void OnInitialized()
    {
        LoginDetails accountInfo = await localStorage.GetItem<LoginDetails>("account_info");
        ViewAppointmentDetailsList = new List<ViewAppointmentDetails>();

        // call api to get list of appointment avaliable for that agency
        var responseMessage = await HttpClient.PostAsJsonAsync("https://localhost:44310/api/appointment/GetAppointmentDetailsByAgencyId", accountInfo.AgencyId);

        if (responseMessage != null)
        {

            if (responseMessage.IsSuccessStatusCode)
            {
                var content = await responseMessage.Content.ReadAsStringAsync();
                var results = JsonConvert.DeserializeObject<List<ViewAppointmentDetails>>(content);
                if (results.Count <= 0)
                {
                    //_noAppointmentflag = true;
                }
                else
                {
                    //_noAppointmentflag = false;

                    foreach (var appointment in results)
                    {
                        ViewAppointmentDetails eachAppointmentDetails = new ViewAppointmentDetails();
                        eachAppointmentDetails.AppointmentId = appointment.AppointmentId;
                        eachAppointmentDetails.CustomerName = appointment.CustomerName;
                        eachAppointmentDetails.AppointmentDate = appointment.AppointmentDate.Date;
                        eachAppointmentDetails.AppointmentSlotID = appointment.AppointmentSlotID;
                        eachAppointmentDetails.UserAccountId = appointment.UserAccountId;


                        ViewAppointmentDetailsList.Add(eachAppointmentDetails);
                        this.StateHasChanged();
                    }
                    this.StateHasChanged();
                }
            }
        }
    }

    private async Task SelectButton()
    {
        //NavManager.NavigateTo("/staff/staffselectappointment");
        // update the database to assign staff ID to this particular appointment
    }

}

