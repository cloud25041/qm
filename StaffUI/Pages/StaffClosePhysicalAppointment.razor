
@page "/staffclosephysicalappointment"
@inject NavigationManager NavManager
@inject HttpClient HttpClient
@inject NavigationManager UriHelper
@using Microsoft.AspNetCore.Components.Routing
@using StaffUI.Models;
@inject LocalStorage.ILocalStorageService localStorage;
@using Newtonsoft.Json;


<h3>Physical Counters</h3>

<p>List of Active Physical Counters.</p>

    <table class="table">
        <thead>
            <tr>
                <th>Physical Counter Number</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <div class="col py-3 px-lg-5 border bg-light">
                AppointmentId: <input type="text" placeholder="Username" @bind="@_appointmentId" />
            </div>
                <tr>
                    <td>
                        <button class="btn btn-primary" @onclick=@(CompletedPhysicalCounter)>Completed</button>
                        <button class="btn btn-primary" @onclick=@(NoShowPhysicalCounter)>No Show</button>
                    </td>
                </tr>
            
        </tbody>
    </table>

    <button class="btn btn-dark" @onclick=@((BackButton))>Back</button>




@code
{

    private PhysicalCounterIdList[] list;
    public string _appointmentId;

    public class PhysicalCounterIdList
    {
        public int PhysicalCounterId { get; set; }
    }

    public class PhysicalCounterDetails
    {
        public Guid appointmentId { get; set; }
        public Guid StaffId { get; set; }
        public int state { get; set; }
    }

    private async Task CompletedPhysicalCounter()
    {
        LoginDetails accountInfo = await localStorage.GetItem<LoginDetails>("account_info");
        PhysicalCounterDetails physicalCounterDetails = new PhysicalCounterDetails();
        Guid appointmentGuid = Guid.Parse(_appointmentId);
        physicalCounterDetails.appointmentId = appointmentGuid;
        physicalCounterDetails.state = 4;
        physicalCounterDetails.StaffId = accountInfo.AccountId;
        var responseMessage = await HttpClient.PostAsJsonAsync("https://localhost:44310/api/appointment/UpdateAppointmentState", physicalCounterDetails);
        if (responseMessage != null)
        {
            // success
        }
        else
        {
            // fail
        }
    }

    private async Task NoShowPhysicalCounter()
    {

        //Call API to PUT the data
    }

    private async Task BackButton()
    {
        NavManager.NavigateTo("/staffmainselection");
    }
}
