
@page "/appointment/appointmentvirtualbooking"
@inject IModalService modal
@inject NavigationManager NavManager

<h3>Virtual Appointment Booking</h3>

@if (_loading)
{
    <h3>Loading Up Appointment Slots...</h3>
}
else
{
    <div class="col py-3 px-lg-5 border bg-light">
        Virtual Appointment Date: <SfDatePicker TValue="DateTime?" Placeholder="Select a Date" Min="@MinDate" Max="@MaxDate"></SfDatePicker>
    </div>

    <div class="col py-3 px-lg-5 border bg-light">
        Virtual Appointment Time: <SfTimePicker TValue="DateTime?" Placeholder="Select a Time" Min="@MinTime" Max="@MaxTime" Format="HH:mm" Step="30"></SfTimePicker>
    </div>

    <div class="col py-3">
        <button class="btn btn-primary"  @onclick="NavigateBook">Book</button>
        <button class="btn btn-secondary" @onclick="NavigateCancel">Cancel</button>
    </div>
    <button class="btn btn-secondary" @onclick="@(() => modal.Show<AppointmentBookingFail>("Booking has Failed"))">Display Fail Modal</button>
}

@code
{
    // set placeholder value, minimum & maximum time
    public DateTime MaxTime { get; set; } = new DateTime(2021, 02, 20, 18, 00, 00);
    public DateTime MinTime { get; set; } = new DateTime(2021, 02, 20, 08, 00, 00);
    // set placeholder value, min & max dates
    public DateTime MaxDate { get; set; } = new DateTime(2021, 08, 28);
    public DateTime MinDate { get; set; } = new DateTime(2021, 08, 03);

    

    private bool _loading;

    private void NavigateBook()
    {
        NavManager.NavigateTo("/appointment/appointmentvirtualbookingsuccess");
    }

    private void NavigateCancel()
    {
        NavManager.NavigateTo("/appointment/appointmentmainselection");
    }

    
}
